@model InventoryTool.Models.Fleet

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<h4 style="color:red">
    @ViewBag.Display
</h4>

<script>
    function checklevel() {

        var valor = document.getElementById("Level_Unit").value;
        var level1 = $("#Level_1").val();
        var level2 = $("#Level_2").val();
        var level3 = $("#Level_3").val();
        var level4 = $("#Level_4").val();
        var level5 = $("#Level_5").val();
        var level6 = $("#Level_6").val();

        $("#divCheckLevel1").html("");
        $("#divCheckLevel2").html("");
        $("#divCheckLevel3").html("");
        $("#divCheckLevel4").html("");
        $("#divCheckLevel5").html("");
        $("#divCheckLevel6").html("");
 
            if (valor == 0 )
            {
                $("#btn_create").prop('disabled', false);
            }

            if (valor == 2 && level2.length > 0) {
                $("#divCheckLevel2").html("level_2 ok");
                $("#btn_create").prop('disabled', false);
            }
            else {
                if (valor == 2 && level2.length == 0) {
                    $("#divCheckLevel2").html("level_2 don't must be empty");
                    $("#btn_create").prop('disabled', true);
                }
            }

            if (valor == 3 && level3.length > 0) {
                $("#divCheckLevel3").html("level_3 ok");
                $("#btn_create").prop('disabled', false);
            }
            else {
                if (valor == 3 && level3.length == 0) {
                    $("#divCheckLevel3").html("level_3 don't must be empty");
                    $("#btn_create").prop('disabled', true);
                }
            }
            if (valor == 4 && level4.length > 0) {
                $("#divCheckLevel4").html("level_4 ok");
                $("#btn_create").prop('disabled', false);
            }
            else {
                if (valor == 4 && level4.length == 0) {
                    $("#divCheckLevel4").html("level_4 don't must be empty");
                    $("#btn_create").prop('disabled', true);
                }
            }
            if (valor == 5 && level5.length > 0) {
                $("#divCheckLevel5").html("level_5 ok");
                $("#btn_create").prop('disabled', false);
            }
            else {
                if (valor == 5 && level5.length == 0) {
                    $("#divCheckLevel5").html("level_5 don't must be empty");
                    $("#btn_create").prop('disabled', true);
                }
            }
            if (valor == 6 && level6.length > 0) {
                $("#divCheckLevel6").html("level_6 ok");
                $("#btn_create").prop('disabled', false);
            }
            else {
                if (valor == 6 && level6.length == 0) {
                    $("#divCheckLevel6").html("level_6 don't must be empty");
                    $("#btn_create").prop('disabled', true);
                }
            }            
    }
</script>
<script>
    $(document).ready(function () {
        $("#Level_1").keyup(checklevel1);
    });
    function checklevel1() {
        var valor = $("#Level_Unit").val();
        var level1 = $("#Level_1").val();
            if (valor == 0 && level1.length > 0)
            {
                $("#btn_create").prop('disabled', false);
                $("#divCheckLevel1").html("level_1 ok");
            }
            else
            {
                if (valor == 0 && level1.length == 0) {
                    $("#btn_create").prop('disabled', true);
                    $("#divCheckLevel1").html("level_1 don't must be empty");
                }
            }       
    }
</script>
<script>
    $(document).ready(function () {
        $("#Level_2").keyup(checklevel2);
    });
    function checklevel2() {
        var valor = $("#Level_Unit").val();
        var level2 = $("#Level_2").val();
            if (valor == 2 && level2.length > 0)
            {
                $("#btn_create").prop('disabled', false);
                $("#divCheckLevel2").html("level_2 ok");
            }
            else
            {
                if (valor == 2 && level2.length == 0) {
                    $("#btn_create").prop('disabled', true);
                    $("#divCheckLevel2").html("level_2 don't must be empty");
                }
            }
    }
</script>
<script>
    $(document).ready(function () {
        $("#Level_3").keyup(checklevel3);
    });
    function checklevel3() {
        var valor = $("#Level_Unit").val();
        var level3 = $("#Level_3").val();
            if (valor == 3 && level3.length > 0)
            {
                $("#btn_create").prop('disabled', false);
                $("#divCheckLevel3").html("level_3 ok");
            }
            else
            {
                if (valor == 3 && level3.length == 0) {
                    $("#btn_create").prop('disabled', true);
                    $("#divCheckLevel3").html("level_3 don't must be empty");
                }
            }
    }
</script>
<script>
    $(document).ready(function () {
        $("#Level_4").keyup(checklevel4);
    });
    function checklevel4() {
        var valor = $("#Level_Unit").val();
        var level4 = $("#Level_4").val();
            if (valor == 4 && level4.length > 0)
            {
                $("#btn_create").prop('disabled', false);
                $("#divCheckLevel4").html("level_4 ok");
            }
            else
            {
                if (valor == 4 && level4.length == 0) {
                    $("#btn_create").prop('disabled', true);
                    $("#divCheckLevel4").html("level_4 don't must be empty");
                }
            }
    }
</script>
<script>
    $(document).ready(function () {
        $("#Level_5").keyup(checklevel5);
    });
    function checklevel5() {
        var valor = $("#Level_Unit").val();
        var level5 = $("#Level_5").val();
            if (valor == 5 && level5.length > 0)
            {
                $("#btn_create").prop('disabled', false);
                $("#divCheckLevel5").html("level_5 ok");
            }
            else
            {
                if (valor == 5 && level5.length == 0) {
                    $("#btn_create").prop('disabled', true);
                    $("#divCheckLevel5").html("level_5 don't must be empty");
                }
            }
    }
</script>
<script>
    $(document).ready(function () {
        $("#Level_6").keyup(checklevel6);
    });
    function checklevel6() {
        var valor = $("#Level_Unit").val();
        var level6 = $("#Level_6").val();
            if (valor == 6 && level6.length > 0)
            {
                $("#btn_create").prop('disabled', false);
                $("#divCheckLevel6").html("level_6 ok");
            }
            else
            {
                if (valor == 6 && level6.length == 0) {
                    $("#btn_create").prop('disabled', true);
                    $("#divCheckLevel6").html("level_6 don't must be empty");
                }
            }
    }
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Fleet</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LogNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorpCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorpCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorpCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FleetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FleetNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FleetNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VinNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VinNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VinNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelCar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelCar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelCar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CapCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CapCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CapCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inservice_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inservice_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inservice_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inservice_process, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inservice_process, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inservice_process, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Original_Inservice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Original_Inservice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Original_Inservice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Original_Process, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Original_Process, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Original_Process, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offroad_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offroad_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offroad_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offroad_process, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offroad_process, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offroad_process, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sold_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sold_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sold_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sold_process, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sold_process, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sold_process, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FleetCancelUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.FleetCancelUnit, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FleetCancelUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amort_Term, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amort_Term, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amort_Term, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Leased_Months_Billed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Leased_Months_Billed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Leased_Months_Billed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.End_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScontrNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScontrNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ScontrNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LicenseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Roe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Roe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Roe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DealerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DealerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DealerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Insurance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Insurance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Secdep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Secdep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Secdep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartmentCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Residual_Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Residual_Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Residual_Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level_1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level_1, new { htmlAttributes = new { @class = "form-control", @onchange = "checklevel1();" } })
                @Html.ValidationMessageFor(model => model.Level_1, "", new { @class = "text-danger" })
            </div>
            <div class="registrationFormAlert" id="divCheckLevel1" style="color:crimson;">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level_2, new { htmlAttributes = new { @class = "form-control", @onchange = "checklevel2();" } })
                @Html.ValidationMessageFor(model => model.Level_2, "", new { @class = "text-danger" })
            </div>
            <div class="registrationFormAlert" id="divCheckLevel2" style="color:crimson;">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level_3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level_3, new { htmlAttributes = new { @class = "form-control", @onchange = "checklevel3();" } })
                @Html.ValidationMessageFor(model => model.Level_3, "", new { @class = "text-danger" })
            </div>
            <div class="registrationFormAlert" id="divCheckLevel3" style="color:crimson;">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level_4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level_4, new { htmlAttributes = new { @class = "form-control", @onchange = "checklevel4();" } })
                @Html.ValidationMessageFor(model => model.Level_4, "", new { @class = "text-danger" })
            </div>
            <div class="registrationFormAlert" id="divCheckLevel4" style="color:crimson;">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level_5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level_5, new { htmlAttributes = new { @class = "form-control", @onchange = "checklevel5();" } })
                @Html.ValidationMessageFor(model => model.Level_5, "", new { @class = "text-danger" })
            </div>
            <div class="registrationFormAlert" id="divCheckLevel5" style="color:crimson;">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level_6, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level_6, new { htmlAttributes = new { @class = "form-control", @onchange = "checklevel6();" } })
                @Html.ValidationMessageFor(model => model.Level_6, "", new { @class = "text-danger" })
            </div>
            <div class="registrationFormAlert" id="divCheckLevel6" style="color:crimson;">
            </div>
        </div>
        @{ 
            List<int> levelUnit = new List<int>();
            levelUnit.Add(0);
            levelUnit.Add(2);
            levelUnit.Add(3);
            levelUnit.Add(4);
            levelUnit.Add(5);
            levelUnit.Add(6);
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Level_Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Level_Unit, new SelectList(levelUnit, "Level unit"),
                 "-- Please select a level unit --", new  {@onchange = "checklevel()" } )
                @Html.ValidationMessageFor(model => model.Level_Unit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TTL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TTL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TTL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OutletCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OutletCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OutletCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OutletName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OutletName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OutletName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CostumerReference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CostumerReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CostumerReference, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ClientUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientUnit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VRN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VRN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VRN, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DriverLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DriverLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DriverLastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ZIP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZIP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZIP, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="btn_create"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
