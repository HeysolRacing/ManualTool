@model PagedList.IPagedList<InventoryTool.Models.Ssupplier>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}
<br />
<h2>Suppliers Catalog</h2>
<br />
@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
@using (Html.BeginForm("Index", "Ssuppliers", FormMethod.Get))
{
    <p>
        Find by Supplier Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        &nbsp;&nbsp;&nbsp;
        Find by Supplier ID: @Html.TextBox("SearchID", ViewBag.CurrentID as string)
        &nbsp;&nbsp;&nbsp;
        By ZIP Code: @Html.TextBox("SearchZIPCode", ViewBag.CurrentZIPCode as string)
        <br /><br />
        By Main Phone: @Html.TextBox("SearchMainPhone", ViewBag.CurrenMainPhone as string)
        &nbsp;&nbsp;
        <input type="submit" value="Search" class="btn btn-info" />
        <input type="hidden" name="screen" value="@ViewBag.screen">
    </p>
}
@using (Html.BeginForm("ExportData2", "Ssuppliers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <table class="table">
        <tr>
            <th></th>
            <th>
                @Html.ActionLink("Supplier Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, currentZIPCode = ViewBag.CurrentZIPCode, currentMainPhone = ViewBag.CurrentMAinPhone })
            </th>
            <th>
                @Html.ActionLink("Supplier ID", "List", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, currentZIPCode = ViewBag.CurrentZIPCode, currentMainPhone = ViewBag.CurrentMainPhone, currentID = ViewBag.CurrentID })
            </th>
            <th>Legal Name</th>
            <th>
                Address
            </th>
            <th>
                City
            </th>
            <th>
                State
            </th>
            <th>
                @Html.ActionLink("ZIP Code", "Index", new { sortOrder = ViewBag.ObligorSortParm, currentFilter = ViewBag.CurrentFilter, currentZIPCode = ViewBag.CurrentZIPCode, currentMainPhone = ViewBag.CurrentMAinPhone })
            </th>
            <th>
                @Html.ActionLink("Main phone", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, currentZIPCode = ViewBag.CurrentZIPCode, currentMainPhone = ViewBag.CurrentMAinPhone })
            </th>
            <th>
                Fax
            </th>
            <th>
                E-mail
            </th>
            <th>
                Country
            </th>
            <th>
                Status
            </th>
            <th>
                Bill Method
            </th>
            <th>
                Type
            </th>
            <th>
                Discount Parts
            </th>
            <th>
                Discount Labor
            </th>
            <th>
                Payment Terms
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.SupplierID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.SupplierID }) |*@
                    @Html.ActionLink("Select", "Select", new { id = item.SupplierID, cr = ViewBag.cr, screen = ViewBag.screen })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StoreNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LegalName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZIPCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Telephone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country_cd)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BillMethod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiscParts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiscLabor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentTerms)
                </td>
            </tr>
        }
        @*<tr>
            <td>
                <input type="submit" name="Export" id="Export" value="Export" class="btn btn-success" />
            </td>
        </tr>*@
    </table>
}
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("List",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentZIPCode = ViewBag.CurrentZIPCode, currentMainPhone = ViewBag.CurrentMAinPhone }))